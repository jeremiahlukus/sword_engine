version: '3.8'

services:
  app:
    build: .
    command: bundle exec rails server -b 0.0.0.0
    volumes:
      - .:/app
      - bundle_cache:/usr/local/bundle
    ports:
      - "3000:3000"
    environment:
      - RAILS_ENV=development
      - REDIS_URL=redis://redis:6379/1
      - SWORD_ENGINE_HOST=sword_engine
      - SWORD_ENGINE_PORT=8081
      - DATABASE_HOST=db
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=password
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      sword_engine:
        condition: service_healthy
    networks:
      - sword_network

  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=sword_engine_development
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - sword_network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - sword_network

  sword_engine:
    build:
      context: ./sword-1.9.0
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - sword_modules:/usr/share/sword/modules
    environment:
      - SWORD_ENGINE_PORT=8081
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - sword_network

networks:
  sword_network:
    driver: bridge

volumes:
  bundle_cache:
  redis_data:
  mysql_data:
  sword_modules:
